/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Terraform Wars API
 * REST API for Terraform Wars application.<br><br>Authentication is managed by Django Allauth in headless mode. Open API specification is available <a href='http://127.0.0.1:8080/_allauth/openapi.html' target='_blank'>here</a>.<br><br><a href='/admin' class='btn'>Administration</a>
 * OpenAPI spec version: 0.0.1
 */
import {
  faker
} from '@faker-js/faker';

import {
  HttpResponse,
  delay,
  http
} from 'msw';

import {
  TutorialGroupState
} from '.././schemas';
import type {
  PagedTutorialGroupListSchema,
  TutorialGroupDetailSchema
} from '.././schemas';


export const getMainAppsTutorialsRoutersTutorialGroupRouterGetTutorialGroupsResponseMock = (overrideResponse: Partial< PagedTutorialGroupListSchema > = {}): PagedTutorialGroupListSchema => ({items: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({id: faker.string.uuid(), state: faker.helpers.arrayElement(Object.values(TutorialGroupState)), tutorial_count: faker.number.int({min: undefined, max: undefined}), title: faker.string.alpha(20), description: faker.string.alpha(20)})), count: faker.number.int({min: undefined, max: undefined}), ...overrideResponse})

export const getMainAppsTutorialsRoutersTutorialGroupRouterCreateTutorialGroupResponseMock = (overrideResponse: Partial< TutorialGroupDetailSchema > = {}): TutorialGroupDetailSchema => ({id: faker.string.uuid(), state: faker.helpers.arrayElement(Object.values(TutorialGroupState)), title: faker.string.alpha(20), description: faker.string.alpha(20), ...overrideResponse})

export const getMainAppsTutorialsRoutersTutorialGroupRouterGetTutorialGroupResponseMock = (overrideResponse: Partial< TutorialGroupDetailSchema > = {}): TutorialGroupDetailSchema => ({id: faker.string.uuid(), state: faker.helpers.arrayElement(Object.values(TutorialGroupState)), title: faker.string.alpha(20), description: faker.string.alpha(20), ...overrideResponse})

export const getMainAppsTutorialsRoutersTutorialGroupRouterUpdateTutorialGroupResponseMock = (overrideResponse: Partial< TutorialGroupDetailSchema > = {}): TutorialGroupDetailSchema => ({id: faker.string.uuid(), state: faker.helpers.arrayElement(Object.values(TutorialGroupState)), title: faker.string.alpha(20), description: faker.string.alpha(20), ...overrideResponse})


export const getMainAppsTutorialsRoutersTutorialGroupRouterGetTutorialGroupsMockHandler = (overrideResponse?: PagedTutorialGroupListSchema | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<PagedTutorialGroupListSchema> | PagedTutorialGroupListSchema)) => {
  return http.get('*/api/tutorial-groups/', async (info) => {await delay(1000);

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse)
            : getMainAppsTutorialsRoutersTutorialGroupRouterGetTutorialGroupsResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getMainAppsTutorialsRoutersTutorialGroupRouterCreateTutorialGroupMockHandler = (overrideResponse?: TutorialGroupDetailSchema | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<TutorialGroupDetailSchema> | TutorialGroupDetailSchema)) => {
  return http.post('*/api/tutorial-groups/', async (info) => {await delay(1000);

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse)
            : getMainAppsTutorialsRoutersTutorialGroupRouterCreateTutorialGroupResponseMock()),
      { status: 201,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getMainAppsTutorialsRoutersTutorialGroupRouterGetTutorialGroupMockHandler = (overrideResponse?: TutorialGroupDetailSchema | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<TutorialGroupDetailSchema> | TutorialGroupDetailSchema)) => {
  return http.get('*/api/tutorial-groups/:tutorialGroupId/', async (info) => {await delay(1000);

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse)
            : getMainAppsTutorialsRoutersTutorialGroupRouterGetTutorialGroupResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getMainAppsTutorialsRoutersTutorialGroupRouterUpdateTutorialGroupMockHandler = (overrideResponse?: TutorialGroupDetailSchema | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<TutorialGroupDetailSchema> | TutorialGroupDetailSchema)) => {
  return http.put('*/api/tutorial-groups/:tutorialGroupId/', async (info) => {await delay(1000);

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse)
            : getMainAppsTutorialsRoutersTutorialGroupRouterUpdateTutorialGroupResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getMainAppsTutorialsRoutersTutorialGroupRouterDeleteTutorialGroupMockHandler = (overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)) => {
  return http.delete('*/api/tutorial-groups/:tutorialGroupId/', async (info) => {await delay(1000);
  if (typeof overrideResponse === 'function') {await overrideResponse(info); }
    return new HttpResponse(null,
      { status: 204,

      })
  })
}
export const getTutorialGroupsMock = () => [
  getMainAppsTutorialsRoutersTutorialGroupRouterGetTutorialGroupsMockHandler(),
  getMainAppsTutorialsRoutersTutorialGroupRouterCreateTutorialGroupMockHandler(),
  getMainAppsTutorialsRoutersTutorialGroupRouterGetTutorialGroupMockHandler(),
  getMainAppsTutorialsRoutersTutorialGroupRouterUpdateTutorialGroupMockHandler(),
  getMainAppsTutorialsRoutersTutorialGroupRouterDeleteTutorialGroupMockHandler()]
